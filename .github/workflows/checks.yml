name: Code Quality Checks

on:
  push:
    branches:
      - "*"
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
      - name: Remove docker-compose.override.yml (if exists)
        run: |
          rm -f docker-compose.override.yml

      - name: Set up Docker BuildKit (for faster builds)
        run: |
          export DOCKER_BUILDKIT=1

      - name: Set environment variables
        run: |
          echo "DOCKER_ENV=true" >> $GITHUB_ENV
          echo "DATABASE_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
          echo "DATABASE_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          echo "DATABASE_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "DATABASE_HOST=db" >> $GITHUB_ENV
          echo "DATABASE_PORT=5432" >> $GITHUB_ENV
          echo "SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> $GITHUB_ENV

      - name: Start Docker containers
        run: |
          docker-compose up -d

      - name: Check running containers
        run: docker ps -a

      - name: Wait for PostgreSQL
        run: |
          until docker exec postgres_db pg_isready -h db -p 5432 -U ${{ secrets.DB_USER }}; do
            sleep 3
          done

      - name: Run Django Migrations
        run: |
          docker exec django poetry run python manage.py migrate

      - name: Run isort (Import sorting)
        run: |
          docker exec django poetry run isort . --check --diff

      - name: Run black (Code formatting)
        run: |
          docker exec django poetry run black . --check

      - name: Run Django Tests
        run: |
          docker exec django poetry run python manage.py test